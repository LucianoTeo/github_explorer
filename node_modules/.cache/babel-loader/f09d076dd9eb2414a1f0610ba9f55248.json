{"ast":null,"code":"var _jsxFileName = \"/home/luciano/Desktop/rocketseat/bootcamp-goStack/github-explorer/src/pages/repository/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { Header, RepositoryInfoContainer, RepositoryInfoNumbers, Issues } from './styles';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport logo from \"../../assets/logo.svg\";\nimport api from '../../services/api';\n\nconst Repository = () => {\n  const [repository, setRepository] = useState(null);\n  const [issues, setIssues] = useState([]);\n  const {\n    params\n  } = useRouteMatch();\n  useEffect(() => {\n    async function loadRepositoryDetails() {\n      const response = await Promise.all([api.get(`/repos/${params.repository}`), api.get(`/repos/${params.repository}/issues`)]);\n      const [responseRepo, responseIssues] = response;\n      const {\n        full_name,\n        description,\n        owner,\n        open_issues,\n        forks,\n        watchers\n      } = responseRepo.data;\n      const repositoryInfo = {\n        full_name: full_name,\n        description: description,\n        owner: {\n          avatar_url: owner.avatar_url,\n          login: owner.login\n        },\n        open_issues: open_issues,\n        forks: forks,\n        watchers: watchers\n      };\n      setRepository(repositoryInfo);\n      setIssues(responseIssues.data);\n    }\n\n    loadRepositoryDetails();\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiChevronLeft, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), \"Voltar\")), /*#__PURE__*/React.createElement(RepositoryInfoContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository === null || repository === void 0 ? void 0 : repository.owner.avatar_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"figcaption\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, repository === null || repository === void 0 ? void 0 : repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, repository === null || repository === void 0 ? void 0 : repository.description))), /*#__PURE__*/React.createElement(RepositoryInfoNumbers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, repository === null || repository === void 0 ? void 0 : repository.watchers), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Stars\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, repository === null || repository === void 0 ? void 0 : repository.forks), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Forks\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, repository === null || repository === void 0 ? void 0 : repository.open_issues), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Issues Abertas\"))), /*#__PURE__*/React.createElement(Issues, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, issues.map(issue => /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"figcaption\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, issue.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, issue.user.login)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Repository;","map":{"version":3,"sources":["/home/luciano/Desktop/rocketseat/bootcamp-goStack/github-explorer/src/pages/repository/index.tsx"],"names":["React","useState","useEffect","useRouteMatch","Link","Header","RepositoryInfoContainer","RepositoryInfoNumbers","Issues","FiChevronLeft","FiChevronRight","api","Repository","repository","setRepository","issues","setIssues","params","loadRepositoryDetails","response","Promise","all","get","responseRepo","responseIssues","full_name","description","owner","open_issues","forks","watchers","data","repositoryInfo","avatar_url","login","logo","map","issue","title","user"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\nimport { Header, RepositoryInfoContainer, RepositoryInfoNumbers, Issues } from './styles';\n\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi'\n\nimport logo from '../../assets/logo.svg';\n\nimport api from '../../services/api'\n\ninterface RepositoryParams  {\n  repository: string;\n}\n\ninterface RepositoryInfo {\n  full_name: string;\n  description: string;\n  owner: {\n    avatar_url: string;\n    login: string;\n  }\n  open_issues: number;\n  forks: number;\n  watchers: number;\n}\n\ninterface RepositoryIssues {\n  id: number;\n  title: string;\n  url: string;\n  user: {\n    login: string;\n  }\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository ] = useState<RepositoryInfo | null>(null);\n  const [issues, setIssues ] = useState<RepositoryIssues[]>([]);\n\n  const  { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n\n    async function  loadRepositoryDetails() {\n      const response = await Promise.all([\n        api.get(`/repos/${params.repository}`), \n        api.get(`/repos/${params.repository}/issues`)\n      ]);\n\n      const [ responseRepo, responseIssues] = response;\n\n      const { full_name, description, owner, open_issues, forks, watchers } = responseRepo.data;\n\n      const repositoryInfo = {\n        full_name: full_name,\n        description: description,\n        owner: {\n          avatar_url: owner.avatar_url,\n          login: owner.login,\n        },\n        open_issues: open_issues,\n        forks: forks,\n        watchers: watchers,\n      }\n\n      setRepository(repositoryInfo);\n      setIssues(responseIssues.data)\n    }\n   \n    loadRepositoryDetails();\n  })\n\n  return (\n    <>\n      <Header>\n        <figure>\n          <img src={logo} alt=\"\" />\n        </figure>\n\n        <Link to=\"/\">\n          <FiChevronLeft size={18} />\n          Voltar\n        </Link>\n      </Header>\n\n      <RepositoryInfoContainer>\n        <figure>\n          <img src={repository?.owner.avatar_url} />\n        </figure>\n        <figcaption>\n          <strong>{repository?.full_name}</strong>\n          <p>{repository?.description}</p>\n        </figcaption>\n      </RepositoryInfoContainer>\n\n      <RepositoryInfoNumbers>\n        <li>\n          <strong>{repository?.watchers}</strong>\n          <span>Stars</span>\n        </li>\n        <li>\n          <strong>{repository?.forks}</strong>\n          <span>Forks</span>\n        </li>\n        <li>\n          <strong>{repository?.open_issues}</strong>\n          <span>Issues Abertas</span>\n        </li>\n      </RepositoryInfoNumbers>\n\n      <Issues>\n      {\n        issues.map(issue => (\n          <Link to=\"\">\n            <figcaption>\n              <strong>{issue.title}</strong>\n              <p>\n                {issue.user.login}\n              </p>\n            </figcaption>\n            <FiChevronRight size={20} />\n          </Link>\n          ))\n        }\n      </Issues>\n    </>\n  )\n}\n\nexport default Repository;"]},"metadata":{},"sourceType":"module"}